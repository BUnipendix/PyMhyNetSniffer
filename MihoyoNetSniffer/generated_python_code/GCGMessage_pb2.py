# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: GCGMessage.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import GCGMsgAddCards_pb2 as GCGMsgAddCards__pb2
import GCGMsgAddDice_pb2 as GCGMsgAddDice__pb2
import GCGMsgCardUpdate_pb2 as GCGMsgCardUpdate__pb2
import GCGMsgCharDie_pb2 as GCGMsgCharDie__pb2
import GCGMsgClientPerform_pb2 as GCGMsgClientPerform__pb2
import GCGMsgCostDice_pb2 as GCGMsgCostDice__pb2
import GCGMsgCostRevise_pb2 as GCGMsgCostRevise__pb2
import GCGMsgDiceReroll_pb2 as GCGMsgDiceReroll__pb2
import GCGMsgDiceRoll_pb2 as GCGMsgDiceRoll__pb2
import GCGMsgDuelDataChange_pb2 as GCGMsgDuelDataChange__pb2
import GCGMsgGameOver_pb2 as GCGMsgGameOver__pb2
import GCGMsgModifyAdd_pb2 as GCGMsgModifyAdd__pb2
import GCGMsgModifyRemove_pb2 as GCGMsgModifyRemove__pb2
import GCGMsgMoveCard_pb2 as GCGMsgMoveCard__pb2
import GCGMsgNewCard_pb2 as GCGMsgNewCard__pb2
import GCGMsgNoDamageSkillResult_pb2 as GCGMsgNoDamageSkillResult__pb2
import GCGMsgOpTimer_pb2 as GCGMsgOpTimer__pb2
import GCGMsgPVEIntentionChange_pb2 as GCGMsgPVEIntentionChange__pb2
import GCGMsgPVEIntentionInfo_pb2 as GCGMsgPVEIntentionInfo__pb2
import GCGMsgPass_pb2 as GCGMsgPass__pb2
import GCGMsgPhaseChange_pb2 as GCGMsgPhaseChange__pb2
import GCGMsgPhaseContinue_pb2 as GCGMsgPhaseContinue__pb2
import GCGMsgReactionBegin_pb2 as GCGMsgReactionBegin__pb2
import GCGMsgReactionEnd_pb2 as GCGMsgReactionEnd__pb2
import GCGMsgRemoveCards_pb2 as GCGMsgRemoveCards__pb2
import GCGMsgSelectOnStage_pb2 as GCGMsgSelectOnStage__pb2
import GCGMsgSelectOnStageByEffect_pb2 as GCGMsgSelectOnStageByEffect__pb2
import GCGMsgSkillLimitsChange_pb2 as GCGMsgSkillLimitsChange__pb2
import GCGMsgSkillResult_pb2 as GCGMsgSkillResult__pb2
import GCGMsgTokenChange_pb2 as GCGMsgTokenChange__pb2
import GCGMsgUpdateController_pb2 as GCGMsgUpdateController__pb2
import GCGMsgUseSkill_pb2 as GCGMsgUseSkill__pb2
import GCGMsgUseSkillEnd_pb2 as GCGMsgUseSkillEnd__pb2
import GCGMsgWaitingListChange_pb2 as GCGMsgWaitingListChange__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10GCGMessage.proto\x1a\x14GCGMsgAddCards.proto\x1a\x13GCGMsgAddDice.proto\x1a\x16GCGMsgCardUpdate.proto\x1a\x13GCGMsgCharDie.proto\x1a\x19GCGMsgClientPerform.proto\x1a\x14GCGMsgCostDice.proto\x1a\x16GCGMsgCostRevise.proto\x1a\x16GCGMsgDiceReroll.proto\x1a\x14GCGMsgDiceRoll.proto\x1a\x1aGCGMsgDuelDataChange.proto\x1a\x14GCGMsgGameOver.proto\x1a\x15GCGMsgModifyAdd.proto\x1a\x18GCGMsgModifyRemove.proto\x1a\x14GCGMsgMoveCard.proto\x1a\x13GCGMsgNewCard.proto\x1a\x1fGCGMsgNoDamageSkillResult.proto\x1a\x13GCGMsgOpTimer.proto\x1a\x1eGCGMsgPVEIntentionChange.proto\x1a\x1cGCGMsgPVEIntentionInfo.proto\x1a\x10GCGMsgPass.proto\x1a\x17GCGMsgPhaseChange.proto\x1a\x19GCGMsgPhaseContinue.proto\x1a\x19GCGMsgReactionBegin.proto\x1a\x17GCGMsgReactionEnd.proto\x1a\x17GCGMsgRemoveCards.proto\x1a\x19GCGMsgSelectOnStage.proto\x1a!GCGMsgSelectOnStageByEffect.proto\x1a\x1dGCGMsgSkillLimitsChange.proto\x1a\x17GCGMsgSkillResult.proto\x1a\x17GCGMsgTokenChange.proto\x1a\x1cGCGMsgUpdateController.proto\x1a\x14GCGMsgUseSkill.proto\x1a\x17GCGMsgUseSkillEnd.proto\x1a\x1dGCGMsgWaitingListChange.proto\"\xa8\x0c\n\nGCGMessage\x12*\n\x0ctoken_change\x18\x02 \x01(\x0b\x32\x12.GCGMsgTokenChangeH\x00\x12*\n\x0cphase_change\x18\n \x01(\x0b\x32\x12.GCGMsgPhaseChangeH\x00\x12$\n\tadd_cards\x18\x05 \x01(\x0b\x32\x0f.GCGMsgAddCardsH\x00\x12*\n\x0cremove_cards\x18\x0c \x01(\x0b\x32\x12.GCGMsgRemoveCardsH\x00\x12/\n\x0fselect_on_stage\x18\x06 \x01(\x0b\x32\x14.GCGMsgSelectOnStageH\x00\x12$\n\tdice_roll\x18\x0e \x01(\x0b\x32\x0f.GCGMsgDiceRollH\x00\x12(\n\x0b\x64ice_reroll\x18\x0f \x01(\x0b\x32\x11.GCGMsgDiceRerollH\x00\x12\x1b\n\x04pass\x18\x08 \x01(\x0b\x32\x0b.GCGMsgPassH\x00\x12\"\n\x08\x63har_die\x18\x04 \x01(\x0b\x32\x0e.GCGMsgCharDieH\x00\x12*\n\x0cskill_result\x18\x03 \x01(\x0b\x32\x12.GCGMsgSkillResultH\x00\x12$\n\tcost_dice\x18\r \x01(\x0b\x32\x0f.GCGMsgCostDiceH\x00\x12\"\n\x08\x61\x64\x64_dice\x18\x07 \x01(\x0b\x32\x0e.GCGMsgAddDiceH\x00\x12$\n\tmove_card\x18\x0b \x01(\x0b\x32\x0f.GCGMsgMoveCardH\x00\x12$\n\tuse_skill\x18\x01 \x01(\x0b\x32\x0f.GCGMsgUseSkillH\x00\x12#\n\x08new_card\x18\xa8\x02 \x01(\x0b\x32\x0e.GCGMsgNewCardH\x00\x12\x35\n\x11update_controller\x18\xd7\x08 \x01(\x0b\x32\x17.GCGMsgUpdateControllerH\x00\x12\'\n\nmodify_add\x18\xc5\r \x01(\x0b\x32\x10.GCGMsgModifyAddH\x00\x12-\n\rmodify_remove\x18\xde\x0f \x01(\x0b\x32\x13.GCGMsgModifyRemoveH\x00\x12,\n\ruse_skill_end\x18\xd8\n \x01(\x0b\x32\x12.GCGMsgUseSkillEndH\x00\x12\x32\n\x10\x64uel_data_change\x18\xff\r \x01(\x0b\x32\x15.GCGMsgDuelDataChangeH\x00\x12/\n\x0e\x63lient_perform\x18\x8d\r \x01(\x0b\x32\x14.GCGMsgClientPerformH\x00\x12%\n\tgame_over\x18\xf8\x04 \x01(\x0b\x32\x0f.GCGMsgGameOverH\x00\x12#\n\x08op_timer\x18\x9a\x01 \x01(\x0b\x32\x0e.GCGMsgOpTimerH\x00\x12\x38\n\x13waiting_list_change\x18\xc7\x0f \x01(\x0b\x32\x18.GCGMsgWaitingListChangeH\x00\x12)\n\x0b\x63\x61rd_update\x18\xa6\r \x01(\x0b\x32\x11.GCGMsgCardUpdateH\x00\x12\x42\n\x19select_on_stage_by_effect\x18\xc9\r \x01(\x0b\x32\x1c.GCGMsgSelectOnStageByEffectH\x00\x12)\n\x0b\x63ost_revise\x18\xd4\x03 \x01(\x0b\x32\x11.GCGMsgCostReviseH\x00\x12/\n\x0ephase_continue\x18\x85\t \x01(\x0b\x32\x14.GCGMsgPhaseContinueH\x00\x12\x36\n\x12pve_intention_info\x18\xd2\x06 \x01(\x0b\x32\x17.GCGMsgPVEIntentionInfoH\x00\x12:\n\x14pve_intention_change\x18\xf4\t \x01(\x0b\x32\x19.GCGMsgPVEIntentionChangeH\x00\x12\x38\n\x13skill_limits_change\x18\xc6\x05 \x01(\x0b\x32\x18.GCGMsgSkillLimitsChangeH\x00\x12=\n\x16no_damage_skill_result\x18\x85\x06 \x01(\x0b\x32\x1a.GCGMsgNoDamageSkillResultH\x00\x12/\n\x0ereaction_begin\x18\xf3\x01 \x01(\x0b\x32\x14.GCGMsgReactionBeginH\x00\x12+\n\x0creaction_end\x18\x94\t \x01(\x0b\x32\x12.GCGMsgReactionEndH\x00\x42\t\n\x07messageb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'GCGMessage_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _GCGMESSAGE._serialized_start=884
  _GCGMESSAGE._serialized_end=2460
# @@protoc_insertion_point(module_scope)
