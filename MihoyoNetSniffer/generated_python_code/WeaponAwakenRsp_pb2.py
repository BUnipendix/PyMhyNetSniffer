# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WeaponAwakenRsp.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15WeaponAwakenRsp.proto\"\xf3\x02\n\x0fWeaponAwakenRsp\x12\x0f\n\x07retcode\x18\t \x01(\x05\x12\x13\n\x0b\x61vatar_guid\x18\n \x01(\x04\x12\x43\n\x13old_affix_level_map\x18\x04 \x03(\x0b\x32&.WeaponAwakenRsp.OldAffixLevelMapEntry\x12\"\n\x1atarget_weapon_awaken_level\x18\x02 \x01(\r\x12\x1a\n\x12target_weapon_guid\x18\x0f \x01(\x04\x12\x43\n\x13\x63ur_affix_level_map\x18\x0b \x03(\x0b\x32&.WeaponAwakenRsp.CurAffixLevelMapEntry\x1a\x37\n\x15OldAffixLevelMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\x1a\x37\n\x15\x43urAffixLevelMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'WeaponAwakenRsp_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _WEAPONAWAKENRSP_OLDAFFIXLEVELMAPENTRY._options = None
  _WEAPONAWAKENRSP_OLDAFFIXLEVELMAPENTRY._serialized_options = b'8\001'
  _WEAPONAWAKENRSP_CURAFFIXLEVELMAPENTRY._options = None
  _WEAPONAWAKENRSP_CURAFFIXLEVELMAPENTRY._serialized_options = b'8\001'
  _WEAPONAWAKENRSP._serialized_start=26
  _WEAPONAWAKENRSP._serialized_end=397
  _WEAPONAWAKENRSP_OLDAFFIXLEVELMAPENTRY._serialized_start=285
  _WEAPONAWAKENRSP_OLDAFFIXLEVELMAPENTRY._serialized_end=340
  _WEAPONAWAKENRSP_CURAFFIXLEVELMAPENTRY._serialized_start=342
  _WEAPONAWAKENRSP_CURAFFIXLEVELMAPENTRY._serialized_end=397
# @@protoc_insertion_point(module_scope)
