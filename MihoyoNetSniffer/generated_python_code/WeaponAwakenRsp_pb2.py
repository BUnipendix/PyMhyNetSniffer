# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WeaponAwakenRsp.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15WeaponAwakenRsp.proto\"\xfb\x02\n\x0fWeaponAwakenRsp\x12\x45\n\x13Unk3300_IKJALGGLHOM\x18\x03 \x03(\x0b\x32(.WeaponAwakenRsp.Unk3300IKJALGGLHOMEntry\x12\x13\n\x0b\x61vatar_guid\x18\x08 \x01(\x04\x12\x0f\n\x07retcode\x18\t \x01(\x05\x12\x1a\n\x12target_weapon_guid\x18\x0e \x01(\x04\x12\x45\n\x13Unk3300_AMMAMKJDEMG\x18\x0f \x03(\x0b\x32(.WeaponAwakenRsp.Unk3300AMMAMKJDEMGEntry\x12\"\n\x1atarget_weapon_awaken_level\x18\x02 \x01(\r\x1a\x39\n\x17Unk3300IKJALGGLHOMEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\x1a\x39\n\x17Unk3300AMMAMKJDEMGEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'WeaponAwakenRsp_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _WEAPONAWAKENRSP_UNK3300IKJALGGLHOMENTRY._options = None
  _WEAPONAWAKENRSP_UNK3300IKJALGGLHOMENTRY._serialized_options = b'8\001'
  _WEAPONAWAKENRSP_UNK3300AMMAMKJDEMGENTRY._options = None
  _WEAPONAWAKENRSP_UNK3300AMMAMKJDEMGENTRY._serialized_options = b'8\001'
  _WEAPONAWAKENRSP._serialized_start=26
  _WEAPONAWAKENRSP._serialized_end=405
  _WEAPONAWAKENRSP_UNK3300IKJALGGLHOMENTRY._serialized_start=289
  _WEAPONAWAKENRSP_UNK3300IKJALGGLHOMENTRY._serialized_end=346
  _WEAPONAWAKENRSP_UNK3300AMMAMKJDEMGENTRY._serialized_start=348
  _WEAPONAWAKENRSP_UNK3300AMMAMKJDEMGENTRY._serialized_end=405
# @@protoc_insertion_point(module_scope)
